      subroutine matinx2 ( a ,ierror)

c	'exact' inversion of 4 X 4 matrix

      implicit real*4 ( a-h, o-z )

      dimension a ( 4 , 4 ) , b ( 4 , 4 )
c      dimension c(4,4)
      integer i , j

      ierror=0
      absmax = 0.

      do 5010 i = 1 , 4
      do 5010 j = 1 , 4
c          c(i,j)=a(i,j) 
	  if ( abs ( a ( i , j ) ) .gt. absmax ) absmax =abs( a ( i , j ))
5010  continue

      if ( absmax .eq. 0. ) then
c          stop 'singularity problem in matinx2'
	  ierror=1
          return
      end if


      fabsmx = 1.d00 / absmax


      do 5020 i = 1 , 4
      do 5020 j = 1 , 4
	  a ( i , j ) = a ( i , j ) * fabsmx
5020  continue



      b(1,1) = a(2,2) * a(3,3) * a(4,4) + a(2,3) * a(3,4) * a(4,2)
     1 + a(2,4) * a(3,2) * a(4,3) - a(2,2) * a(3,4) * a(4,3)
     2 - a(2,3) * a(3,2) * a(4,4) - a(2,4) * a(3,3) * a(4,2)
      b(2,1) = a(2,3) * a(3,1) * a(4,4) + a(2,4) * a(3,3) * a(4,1)
     1 + a(2,1) * a(3,4) * a(4,3) - a(2,3) * a(3,4) * a(4,1)
     2 - a(2,4) * a(3,1) * a(4,3) - a(2,1) * a(3,3) * a(4,4)
      b(3,1) = a(2,4) * a(3,1) * a(4,2) + a(2,1) * a(3,2) * a(4,4)
     1 + a(2,2) * a(3,4) * a(4,1) - a(2,4) * a(3,2) * a(4,1)
     2 - a(2,1) * a(3,4) * a(4,2) - a(2,2) * a(3,1) * a(4,4)
      b(4,1) = a(2,1) * a(3,3) * a(4,2) + a(2,2) * a(3,1) * a(4,3)
     1 + a(2,3) * a(3,2) * a(4,1) - a(2,1) * a(3,2) * a(4,3)
     2 - a(2,2) * a(3,3) * a(4,1) - a(2,3) * a(3,1) * a(4,2)
      b(1,2) = a(3,2) * a(4,4) * a(1,3) + a(3,3) * a(4,2) * a(1,4)
     1 + a(3,4) * a(4,3) * a(1,2) - a(3,2) * a(4,3) * a(1,4)
     2 - a(3,3) * a(4,4) * a(1,2) - a(3,4) * a(4,2) * a(1,3)
      b(2,2) = a(3,3) * a(4,4) * a(1,1) + a(3,4) * a(4,1) * a(1,3)
     1 + a(3,1) * a(4,3) * a(1,4) - a(3,3) * a(4,1) * a(1,4)
     2 - a(3,4) * a(4,3) * a(1,1) - a(3,1) * a(4,4) * a(1,3)
      b(3,2) = a(3,4) * a(4,2) * a(1,1) + a(3,1) * a(4,4) * a(1,2)
     1 + a(3,2) * a(4,1) * a(1,4) - a(3,4) * a(4,1) * a(1,2)
     2 - a(3,1) * a(4,2) * a(1,4) - a(3,2) * a(4,4) * a(1,1)
      b(4,2) = a(3,1) * a(4,2) * a(1,3) + a(3,2) * a(4,3) * a(1,1)
     1 + a(3,3) * a(4,1) * a(1,2) - a(3,1) * a(4,3) * a(1,2)
     2 - a(3,2) * a(4,1) * a(1,3) - a(3,3) * a(4,2) * a(1,1)
      b(1,3) = a(4,2) * a(1,3) * a(2,4) + a(4,3) * a(1,4) * a(2,2)
     1 + a(4,4) * a(1,2) * a(2,3) - a(4,2) * a(1,4) * a(2,3)
     2 - a(4,3) * a(1,2) * a(2,4) - a(4,4) * a(1,3) * a(2,2)
      b(2,3) = a(4,3) * a(1,1) * a(2,4) + a(4,4) * a(1,3) * a(2,1)
     1 + a(4,1) * a(1,4) * a(2,3) - a(4,3) * a(1,4) * a(2,1)
     2 - a(4,4) * a(1,1) * a(2,3) - a(4,1) * a(1,3) * a(2,4)
      b(3,3) = a(4,4) * a(1,1) * a(2,2) + a(4,1) * a(1,2) * a(2,4)
     1 + a(4,2) * a(1,4) * a(2,1) - a(4,4) * a(1,2) * a(2,1)
     2 - a(4,1) * a(1,4) * a(2,2) - a(4,2) * a(1,1) * a(2,4)
      b(4,3) = a(4,1) * a(1,3) * a(2,2) + a(4,2) * a(1,1) * a(2,3)
     1 + a(4,3) * a(1,2) * a(2,1) - a(4,1) * a(1,2) * a(2,3)
     2 - a(4,2) * a(1,3) * a(2,1) - a(4,3) * a(1,1) * a(2,2)
      b(1,4) = a(1,2) * a(2,4) * a(3,3) + a(1,3) * a(2,2) * a(3,4)
     1 + a(1,4) * a(2,3) * a(3,2) - a(1,2) * a(2,3) * a(3,4)
     2 - a(1,3) * a(2,4) * a(3,2) - a(1,4) * a(2,2) * a(3,3)
      b(2,4) = a(1,3) * a(2,4) * a(3,1) + a(1,4) * a(2,1) * a(3,3)
     1 + a(1,1) * a(2,3) * a(3,4) - a(1,3) * a(2,1) * a(3,4)
     2 - a(1,4) * a(2,3) * a(3,1) - a(1,1) * a(2,4) * a(3,3)
      b(3,4) = a(1,4) * a(2,2) * a(3,1) + a(1,1) * a(2,4) * a(3,2)
     1 + a(1,2) * a(2,1) * a(3,4) - a(1,4) * a(2,1) * a(3,2)
     2 - a(1,1) * a(2,2) * a(3,4) - a(1,2) * a(2,4) * a(3,1)
      b(4,4) = a(1,1) * a(2,2) * a(3,3) + a(1,2) * a(2,3) * a(3,1)
     1 + a(1,3) * a(2,1) * a(3,2) - a(1,1) * a(2,3) * a(3,2)
     2 - a(1,2) * a(2,1) * a(3,3) - a(1,3) * a(2,2) * a(3,1)

      det = a ( 1 , 1 ) * b ( 1 , 1 ) + a ( 1 , 2 ) * b ( 2 , 1 )
     1 + a ( 1 , 3 ) * b ( 3 , 1 ) + a ( 1 , 4 ) * b ( 4 , 1 )
c	if(abs(det).lt.1.e-2)then
c		print*,det
c                do i=1,4
c                   do j=1,4
c                       print*,'c(',i,',',j,')=',sngl(c(i,j))  
c                   end do
c                end do
c	end if

c      print*,'en matinx (4)',det

      fdeta = fabsmx / det

c      print*,'en matinx (5)',fdeta


      do 5000 i = 1 , 4
      do 5000 j = 1 , 4
          a ( i , j ) = b ( i , j ) * fdeta
5000  continue
c      	if(abs(det).lt.1.e-2)then
c          do i=1,4
c             do j=1,4
c                sum=0.
c                do l=1,4
c                    sum=sum+a(i,l)*c(l,j)
c                end do
c                print*,'c*inversa(',i,',',j,')=',sum
c             end do
c           end do
c         end if 

c      print*,'en matinx (6)',fdeta
   
      return
      end

